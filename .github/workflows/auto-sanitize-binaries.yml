name: Auto Sanitize Binaries
on:
  push:
    branches: [ "feature/**", "release/**", "codex/**" ]
permissions:
  contents: write
  pull-requests: write
  issues: write
jobs:
  sanitize:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Determine diff range
        id: range
        run: |
          echo "base=${{ github.event.before }}" >> $GITHUB_OUTPUT
          echo "head=${{ github.sha }}" >> $GITHUB_OUTPUT
      - name: Detect disallowed files
        id: detect
        run: |
          git diff --name-only --diff-filter=ACMRT "${{ steps.range.outputs.base }}" "${{ steps.range.outputs.head }}" > changed.txt
          BIN_REGEX="\.(pdf|png|jpg|jpeg|gif|bmp|svgz?|webp|ico|docx?|pptx?|xlsx?|sqlite|db|zip|gz|bz2|7z|bin|exe|dmg|mp4|mov|mp3|wav)$"
          BIN_LIST=$(grep -Ei "$BIN_REGEX" changed.txt || true)
          echo "bin_list<<EOF" >> $GITHUB_OUTPUT
          echo "$BIN_LIST" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          [ -z "$BIN_LIST" ] && echo "No binaries."
      - name: Stop if nothing to sanitize
        if: ${{ steps.detect.outputs.bin_list == '' }}
        run: echo "Nothing to do"
      - name: Remove binaries and update .gitignore
        if: ${{ steps.detect.outputs.bin_list != '' }}
        run: |
          set -e
          touch .gitignore
          for p in "*.pdf" "*.doc" "*.docx" "*.pptx" "*.xlsx" "*.sqlite" "*.db" "*.png" "*.jpg" "*.zip" "*.bin" "*.mp4" "*.mov"; do
            grep -qxF "$p" .gitignore || echo "$p" >> .gitignore
          done
          while IFS= read -r f; do
            [ -n "$f" ] && [ -f "$f" ] && git rm --cached "$f"
          done <<< "${{ steps.detect.outputs.bin_list }}"
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .gitignore
          git commit -m "chore(ci): auto-remove binary files and update .gitignore"
          git push
      - name: Report to PR or commit
        if: ${{ steps.detect.outputs.bin_list != '' }}
        uses: actions/github-script@v7
        env:
          BIN_LIST: ${{ steps.detect.outputs.bin_list }}
        with:
          script: |
            const owner = context.repo.owner, repo = context.repo.repo;
            const branch = context.ref.replace("refs/heads/","");
            const body = "üßπ Auto Sanitize Binaries\n\n–£–¥–∞–ª–µ–Ω—ã —Ñ–∞–π–ª—ã:\n" + (process.env.BIN_LIST.split("\n").filter(Boolean).map(f=>`- ${f}`).join("\n")||"(–ø—É—Å—Ç–æ)");
            const prs = await github.rest.pulls.list({ owner, repo, state:"open", head:`${owner}:${branch}` });
            if (prs.data.length) {
              await github.rest.issues.createComment({ owner, repo, issue_number: prs.data[0].number, body });
            } else {
              await github.rest.repos.createCommitComment({ owner, repo, commit_sha: context.sha, body });
            }

name: Auto Sanitize Binaries

on:
  push:
    branches: [ "feature/**", "release/**" ]  # main/develop –Ω–µ —Ç—Ä–æ–≥–∞–µ–º

permissions:
  contents: write          # –∞–≤—Ç–æ-–∫–æ–º–º–∏—Ç –æ—á–∏—Å—Ç–∫–∏
  pull-requests: write     # –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ PR
  issues: write

jobs:
  sanitize:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine diff range
        id: range
        run: |
          echo "base=${{ github.event.before }}" >> $GITHUB_OUTPUT
          echo "head=${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Detect disallowed files
        id: detect
        run: |
          BASE="${{ steps.range.outputs.base }}"
          HEAD="${{ steps.range.outputs.head }}"
          git diff --name-only --diff-filter=ACMRT "$BASE" "$HEAD" > changed.txt

          BIN_REGEX='\.(pdf|png|jpg|jpeg|gif|bmp|svgz|webp|ico|doc|docx|ppt|pptx|xls|xlsx|sqlite|db|zip|gz|bz2|7z|bin|exe|dmg|mp4|mov|mp3|wav)$'
          BIN_LIST=$(grep -Ei "$BIN_REGEX" changed.txt || true)
          echo "bin_list<<EOF" >> $GITHUB_OUTPUT
          echo "$BIN_LIST" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          if [ -n "$BIN_LIST" ]; then
            echo "Found binaries:"
            echo "$BIN_LIST"
          else
            echo "No binaries found."
          fi

      - name: Stop if nothing to sanitize
        if: ${{ steps.detect.outputs.bin_list == '' }}
        run: echo "Clean. Nothing to do."

      - name: Remove binaries from index and update .gitignore
        if: ${{ steps.detect.outputs.bin_list != '' }}
        run: |
          set -e
          touch .gitignore
          for p in '*.pdf' '*.doc' '*.docx' '*.pptx' '*.xlsx' '*.sqlite' '*.png' '*.jpg' '*.zip' '*.bin' '*.mp4' '*.mov'; do
            grep -qxF "$p" .gitignore || echo "$p" >> .gitignore
          done

          while IFS= read -r f; do
            [ -z "$f" ] && continue
            if [ -f "$f" ]; then
              git rm --cached "$f"
              echo "Removed from repo index: $f"
            fi
          done <<< "${{ steps.detect.outputs.bin_list }}"

      - name: Commit and push cleanup
        if: ${{ steps.detect.outputs.bin_list != '' }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .gitignore
          git commit -m "chore(ci): auto-remove binary files and update .gitignore"
          git push

      - name: Post report to PR or commit
        if: ${{ steps.detect.outputs.bin_list != '' }}
        uses: actions/github-script@v7
        env:
          BIN_LIST: ${{ steps.detect.outputs.bin_list }}
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const branch = context.ref.replace('refs/heads/','');
            const binList = process.env.BIN_LIST.split('\n').filter(Boolean).map(f => `- ${f}`).join('\n');

            // –ù–∞–π—Ç–∏ –æ—Ç–∫—Ä—ã—Ç—ã–π PR –∏–∑ —ç—Ç–æ–π –≤–µ—Ç–∫–∏
            const prs = await github.rest.pulls.list({
              owner, repo, state: 'open', head: `${owner}:${branch}`
            });

            const body = [
              'üßπ **Auto Sanitize Binaries**',
              '',
              '–ò–∑ –∫–æ–º–º–∏—Ç–∞ —É–¥–∞–ª–µ–Ω—ã –±–∏–Ω–∞—Ä–Ω—ã–µ/–∫—Ä—É–ø–Ω—ã–µ —Ñ–∞–π–ª—ã –∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –ø—Ä–∞–≤–∏–ª–∞ –≤ `.gitignore`.',
              '',
              '–°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤:',
              binList || '(–ø—É—Å—Ç–æ)'
            ].join('\n');

            if (prs.data.length > 0) {
              await github.rest.issues.createComment({
                owner, repo,
                issue_number: prs.data[0].number,
                body
              });
            } else {
              // –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∫–æ–º–º–∏—Ç—É
              await github.rest.repos.createCommitComment({
                owner, repo,
                commit_sha: context.sha,
                body
              });
            }
